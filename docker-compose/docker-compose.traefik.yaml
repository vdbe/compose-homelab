secrets:
  cf_api_email:
    file: ${SECRET_DIR}/cf_api_email.secret
  cf_zone_api_token:
    file: ${SECRET_DIR}/cf_zone_api_token.secret
  cf_dns_api_token:
    file: ${SECRET_DIR}/cf_dns_api_token.secret

networks:
  00_net_ingress:
  10_cloudflare_tunnel:
  20_traefik:

volumes:
  traefik-letsencrypt:

services:
  pre-traefik:
    build: ./docker/pre-traefik
    restart: "no"

    #entrypoint: "/bin/sleep infinite"

    env_file:
      - ${CONFIG_DIR}/traefik/env_file.env

    command:
      - "/workdir/traefik.yaml"

    networks:
      00_net_ingress:
      10_cloudflare_tunnel:
      20_traefik:

    volumes:
      - "${CONFIG_DIR}/traefik/traefik.yaml:/workdir/traefik.yaml"

  traefik:
    image: "traefik:latest"
    restart: "${RESTART_POLICY}"

    secrets:
      - cf_api_email
      - cf_zone_api_token
      - cf_dns_api_token

    env_file:
      - ${CONFIG_DIR}/traefik/env_file.env

    networks:
      00_net_ingress:
        priority: 100
        aliases:
          - "ingress"
      10_cloudflare_tunnel:
        aliases:
          - "ingress-cloudflare"
      20_traefik:
        aliases:
          - "ingress-traefik"

    labels:
      com.centurylinklabs.watchtower.enable: "${DEFAULT_WATCHTOWER_ENABLE}"
      com.centurylinklabs.watchtower.scope: "${DEFAULT_WATCHTOWER_SCOPE}"

    ports:
      #- "80:80"
      - "443:443"
      #- "8080:8080"

    volumes:
      - "${CONFIG_DIR}/traefik/FileProvider:/FileProvider:ro"
      - "${CONFIG_DIR}/traefik/traefik.yaml:/etc/traefik/traefik.yml:ro"
      - "traefik-letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    depends_on:
      pre-traefik:
        condition: service_completed_successfully

